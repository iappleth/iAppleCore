<?xml version="1.0" encoding="UTF-8"?>
<!--
 ************************************************************************************
 * Copyright (C) 2012-2021 Openbravo S.L.U.
 * Licensed under the Openbravo Commercial License version 1.0
 * You may obtain a copy of the License at http://www.openbravo.com/legal/obcl.html
 * or in the legal folder of this module distribution.
 ************************************************************************************
-->

<output>
  <ticket>
    <line>
        <image>ticket-image.png</image>
    </line>
    <line>
      <%
        const terminal = OB.App.TerminalProperty.get('terminal');
        const hasNegativeLines = ticket.lines.some(line => line.qty < 0);
        const title = hasNegativeLines ? 'OBPOS_ReceiptWithReturnRpt_Title' : 'OBPOS_ReceiptRpt_Title';
       %>
      <text align="center" length="42"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel(title)) %></text>
    </line>
    <line></line>
    <line>
      <text align="center" length="42"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tckheader_line1'))%></text>
    </line>
    <line>
      <text align="center" length="42"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tckheader_line2'))%></text>
    </line>
    <line></line>
    <line>
      <text align="left" length="22"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_ticket')) %></text>
      <text><%= OB.UTIL.encodeXMLComponent(ticket.documentNo) %></text>
    </line>
    <line>
     <text align="left" length="22"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_datetime')) %></text>
     <text><%= OB.I18N.formatDate(ticket.orderDate) %></text>
       <text> </text>
       <%
         const time = ticket.created != null ? new Date(ticket.created) : new Date();
       %>
      <text><%= OB.I18N.formatHour(time) %></text>
    </line>
    <line>
      <text align="left" length="22"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_cashierPOS')) %></text>
      <text><%= OB.UTIL.encodeXMLComponent(ticket['salesRepresentative$_identifier']) %></text>
      <text>, </text>
      <text><%= OB.UTIL.encodeXMLComponent(ticket['posTerminal$_identifier']) %></text>
    </line>
    <line>
      <text align="left" length="22"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_LblTaxId')) %></text>
      <text><%= OB.UTIL.encodeXMLComponent(terminal.organizationTaxId) %></text>
    </line>
    <line>
      <text><%= OB.UTIL.encodeXMLComponent(terminal.organizationAddressIdentifier) %></text>
    </line>
    <line></line>
    <line>
      <text align ="left" length="21"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_LineItem'))%></text>
      <text align ="right" length="5">#</text>
      <text align ="right" length="8"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_LinePrice'))%></text>
      <text align ="right" length="8"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_LineTotal'))%></text>
    </line>
    <line>
      <text>------------------------------------------</text>
    </line>
    <% 
      ticket.lines.forEach(line => {
    %>
      <line>
        <text align ="left" length="21"><%= OB.UTIL.encodeXMLComponent(line.product._identifier) %></text>
        <text align ="right" length="5"><%= OB.UTIL.printQty(line.qty) %></text>
        <text align ="right" length="8"><%= OB.UTIL.printTicketLinePrice(line) %></text>
        <text align ="right" length="8"><%= OB.UTIL.printTicketLineAmount(line) %></text>
      </line>
    <%if(line.organization && line.organization.id !== terminal.organization) {%>
      <line>
        <text align ="right">-- <%= line.organization.name %></text>
      </line>
    <%}
    if (OB.App.Security.hasPermission('OBRDM_EnableDeliveryModes')) {
     const {obrdmDeliveryDate, obrdmDeliveryTime, obrdmDeliveryMode, nameDelivery} = line;
     let deliveryDate;
     if(obrdmDeliveryDate) {
       deliveryDate = obrdmDeliveryDate instanceof Date ? obrdmDeliveryDate : new Date(obrdmDeliveryDate);
     }
     let deliveryTime;
     if(obrdmDeliveryTime) {
       deliveryDate = obrdmDeliveryTime instanceof Date ? obrdmDeliveryTime : new Date(obrdmDeliveryTime);
     }
     const showDate = obrdmDeliveryMode === 'PickupInStoreDate' || obrdmDeliveryMode === 'HomeDelivery';
     const showTime = obrdmDeliveryMode === 'HomeDelivery';
     const deliveryName = nameDelivery ? nameDelivery : (obrdmDeliveryMode ? OB.App.TerminalProperty.get('deliveryModes').find(dm => dm.id === obrdmDeliveryMode).name : null);
     
     if (obrdmDeliveryMode && deliveryName && (obrdmDeliveryMode !== ticket.obrdmDeliveryModeProperty || deliveryDate)) {
      if (!deliveryDate) {
        deliveryDate = new Date();
        deliveryDate.setHours(0);
        deliveryDate.setMinutes(0);
        deliveryDate.setSeconds(0);
      }

      if (!deliveryTime) {
        deliveryTime = new Date();
        deliveryTime.setSeconds(0);
      }
     %>
      <line>
          <text align ="right">-- <%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBRDM_DeliveryMode'))%>: <%=deliveryName%></text>
      </line>
     <% if(showDate){%>
		<line>
          <text align ="right">-- <%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBRDM_DeliveryDate'))%>: <%=OB.I18N.formatDate(deliveryDate) %></text>
        </line>         
     <%}
      if(showTime){%>
		<line>
          <text align ="right">-- <%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBRDM_DeliveryTime'))%>: <%=OB.I18N.formatHour(deliveryTime) %></text>
        </line>
      <%}
      }
     }
   
        if (line.promotions) {
          line.promotions.forEach(p => {
            if (!p.hidden) {
            %>
          <line>
            <text align="left" length="2">--</text>
            <text align="left" length="32"><%= OB.UTIL.encodeXMLComponent(p.name) %></text>
            <text align="right" length="8"><%= OB.UTIL.printAmount(-p.amt) %></text>
          </line>
          <%
            }
          });
        }
      });
    %>
    <%if(!ticket.priceIncludesTax){%>
      <line>
        <text align ="left" length="21"><%= OB.I18N.getLabel('OBPOS_LblTotalTax') %></text>
        <text align ="right" length="5"></text>
        <text align ="right" length="8"></text>
        <text align ="right" length="8"><%= OB.UTIL.printAmount(OB.DEC.sub(ticket.grossAmount, ticket.netAmount)) %></text>  
      </line>
    <%}%>
    <line></line>
    <line size="1">
      <text align ="left" length="25"><%=OB.I18N.getLabel('OBPOS_ReceiptTotal') + ' ' + ticket['currency$_identifier'] %></text>
      <text align ="right" length="14"><%= OB.UTIL.printAmount(ticket.grossAmount) %></text>
    </line>   
      <%
        const payments = ticket.payments || [];
        payments.forEach(payment => {
          let paymentName = payment.name;
          if (payment.paymentData && payment.paymentData.name && payment.paymentData.name.length > 0) {
            paymentName = paymentName + ' (' + payment.paymentData.name + ')';
          }
         if(payment.rate && payment.rate !=='1') {
      %>
        <line>
          <text align="left" length="15"><%= paymentName %></text>
          <text align="right" length="12"><%= '('+OB.UTIL.printAmount(payment.amount)+' '+payment.isocode+')' %></text>
          <text align="right" length="13"><%= OB.UTIL.printAmount(payment.origAmount) %></text>
        </line>
     <%
         }else {
     %>
        <line>
          <text align="left" length="20"><%= paymentName %></text>
          <text align="right" length="20"><%= OB.UTIL.printAmount(payment.amount) %></text>
        </line>
      <%
        }
          if (payment.gatewayData) {
          const pinfo = payment.gatewayData;
      %>
        <line>
          <text align="left" length="2"></text>
          <text align="left" length="20"><%= OB.I18N.getLabel('OBPOS_PaymentTran') %></text>
          <text align="left" length="20"><%= pinfo.transaction %></text>
        </line>      
        <line>
          <text align="left" length="2"></text>
          <text align="left" length="20"><%= OB.I18N.getLabel('OBPOS_PaymentApproval') %></text>
          <text align="left" length="20"><%= pinfo.authorization %></text>
        </line>      
        <% if (pinfo.cardmasked) { %>
        <line>
          <text align="left" length="2"></text>
          <text align="left" length="20"><%= OB.I18N.getLabel('OBPOS_PaymentAct') %></text>
          <text align="left" length="20"><%= pinfo.cardmasked %></text>
        </line>  
        <% } %>
        <% if (pinfo.cardlogo) { %>    
        <line>
          <text align="left" length="2"></text>
          <text align="left" length="20"><%= OB.I18N.getLabel('OBPOS_PaymentLogo') %></text>
          <text align="left" length="20"><%= pinfo.cardlogo %></text>
        </line>
        <% } %>
            
      <%
          }
        });
      %>   
    <% if (ticket.hasbeenpaid === 'Y' && ticket.paidOnCredit) { %>
    <line>
      <text align="left" length="20"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_paidOnCredit')) %></text>
      <text align="right" length="20"><%= OB.UTIL.printAmount(ticket.grossAmount - ticket.payment) %></text>
    </line>
    <% } %>
    
    <%
      const changelabel = OB.UTIL.getChangeLabelFromTicket(ticket)
      if (changelabel) {
        if (changelabel.length > 34) {
          const changesplit = changelabel.split(' + ');
    %>
          <line>
              <text align ="left" length="7"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_ticketChange')) %></text>
              <text align ="right" length="35"><%= changesplit[0] %> </text>
          </line>      
    <%     
          let changeindex;
          for (changeindex = 1; changeindex < changesplit.length; changeindex++) {
    %>
          <line>
              <text align ="right" length="42">+ <%= changesplit[changeindex] %> </text>
          </line> 
    <%      
          }
        } else {
    %>
          <line>
              <text align ="left" length="7"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_ticketChange')) %></text>
              <text align ="right" length="35"><%= changelabel %> </text>
          </line>
    <% 
        }
      } 
    %>    
    
    <line></line>
    <line size="1">
      <% if (ticket.hasbeenpaid === 'N') { %>
        <text align="center" length="42"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tckfooter_draft')) %></text>
      <% } else if (ticket.payments.length > 0) { %>
        <text align="center" length="42"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tckfooter_paid')) %></text>
      <% } else { %>
        <text align="center" length="42"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tckfooter_notPaid'))  %></text>
      <% } %>
    </line>
    <line>
      <text align="center" length="42"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tckfooter_line2'))%></text>
    </line>
    <line></line>
    <line>
      <text align ="left" length="12"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tck_breakdown'))%></text>
      <text align ="left" length="12"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tck_base'))%></text>
      <text align ="left" length="12"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_tck_TAX'))%></text>
    </line>
    <line>
      <text>------------------------------------------</text>
    </line>
    <%
      let totAmount = 0;
      const taxes = Object.values(ticket.taxes).sort((a, b) => tax.name.localeCompare(tax.name));
      taxes.forEach(tax => {
        totAmount += tax.amount;
    %>
      <line>
        <text align ="left" length="12"><%= OB.I18N.formatRate(tax.rate) %></text>
        <text align ="left" length="12"><%= OB.UTIL.printAmount(tax.net) %></text>
        <text align ="left" length="12"><%= OB.UTIL.printAmount(tax.amount) %></text>
      </line>
    <%
      });
    %>
    <line>
      <text>------------------------------------------</text>
    </line>
    <line>
      <text align ="left" length="24"><%= OB.UTIL.encodeXMLComponent(OB.I18N.getLabel('OBPOS_display_total'))%></text>
      <text align ="left" length="12"><%= OB.UTIL.printAmount(totAmount) %></text>
    </line>

    <line>
      <% if(ticket.documentNo !== ''){ %>
        <barcode type="CODE128" position="left"><%= OB.UTIL.encodeXMLComponent(ticket.documentNo) %></barcode>
      <% } %>
    </line>

  </ticket>

</output>
